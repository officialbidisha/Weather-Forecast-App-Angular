{"ast":null,"code":"import { AlertComponent } from './alert/alert.component';\nimport { createCustomElement } from \"@angular/elements\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./weather/weather.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(injector) {\n      this.title = 'WeatherApp';\n      this.content = null;\n      const AlertElement = createCustomElement(AlertComponent, {\n        injector: injector\n      });\n      customElements.define('my-alert', AlertElement);\n      /**\r\n       * This will never be executed as the component rendering is already done\r\n       */\n\n      setTimeout(() => {\n        this.content = \"<my-alert [message]='hey there'></my-alert>\";\n      }, 1000);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"innerHTML\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-weather\")(1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.content, i0.ɵɵsanitizeHtml);\n      }\n    },\n    directives: [i1.WeatherComponent],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}